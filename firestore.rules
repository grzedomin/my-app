rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Function to check if the current user is an admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    // Function to check if request is from Firebase service account
    function isServiceAccount() {
      return request.auth.token.firebase.sign_in_provider == 'custom';
    }
    
    // Allow service accounts to read/write to all collections
    match /{document=**} {
      allow read, write: if isServiceAccount();
    }
  
    // Allow anyone to read files metadata
    match /files/{fileId} {
      allow read: if true;
      // Only allow users to write to their own files
      allow create, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow admins to delete any file
      allow delete: if isAdmin();
    }
    
    // Add rules for predictions and processed-files collections
    match /predictions/{docId} {
      allow read: if true;
      // Only service accounts and admins can write
      allow create, update, delete: if isAdmin();
    }
    
    match /processed-files/{docId} {
      allow read: if true;
      // Only service accounts and admins can write
      allow create, update, delete: if isAdmin();
    }
    
    // Users collection rules
    match /users/{userId} {
      // Users can read their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all user data
      allow read: if isAdmin();
      
      // Users can only create/update their own documents
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // No one can delete user documents
      allow delete: if false;
    }
    
    // Subscriptions collection rules
    match /subscriptions/{userId} {
      // Users can read their own subscription data
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Admins can read all subscription data
      allow read: if isAdmin();
      
      // Users can create and update their own subscription entry
      allow create, update: if request.auth != null && request.auth.uid == userId && userId == request.resource.data.userId;
      
      // Admins can also update any subscription
      allow update: if isAdmin();
      
      // No one can delete subscription data
      allow delete: if false;
    }
  }
} 